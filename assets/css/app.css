body {
	background: #ffffff;
	font-family: 'Ink Free', cursive;
	font-size: 16px;
}

.container {
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
}

h2 {
	font-family: 'Ink Free', cursive;
	display: block;
}

li {
	display: flex;
	justify-content: space-evenly;
	align-items: baseline;
}


/*
 * Styles for the deck of cards
 */


.deck {
	background: #716F71;
	padding: 1rem;
	border-radius: 4px;
	box-shadow: 8px 9px 26px 0 rgba(46, 61, 73, 0.5);
	justify-content: space-around;
	align-items: center;
	margin: 0 0 3em;
	display: grid;
	grid-template-columns: repeat(6, 1fr);
	grid-template-rows: repeat(3, 1fr);
	grid-gap: 5px;
}

.deck .card {
	height: 9rem;
	width: 9rem;
	margin: 0.2rem 0.2rem;
	background: #141214;;
	color: black;
	font-size: 0;
	border-radius: 5px;
	cursor: pointer;
	display: flex;
	justify-content: space-evenly;
	align-items: center;
	box-shadow: 5px 2px 20px 0 rgba(46, 61, 73, 0.5);
}

.deck .card.open {
	transform: rotateY(0);
	background: forestgreen;
	cursor: default;
	animation-name: flipInY;
	-webkit-backface-visibility: visible !important;
	backface-visibility: visible !important;
	animation-duration: .75s;
}

.deck .card.open h6 {
	color: darkorange;
}

.deck .card.show {
	font-size: 28px;
}

.deck .card.match {
	cursor: default;
	background: #E5F720;
	font-size: 28px;
	animation-name: rubberBand;
	-webkit-backface-visibility: visible !important;
	backface-visibility: visible !important;
	animation-duration: .75s;
}

.deck .card.unmatched {
	animation-name: pulse;
	-webkit-backface-visibility: visible !important;
	backface-visibility: visible !important;
	animation-duration: .75s;
	background: purple;
}

.deck .card.disabled {
	pointer-events: none;
	opacity: 0.9;
}

.glow-on-hover {
    width: 100px;
	height: 30px;
	float: right;
    border: none;
    outline: none;
    color: #fff;
	background: #111;
	font-family: 'Ink Free', cursive;
    cursor: pointer;
    position: relative;
    z-index: 0;
	border-radius: 10px;
}

.glow-on-hover:before {
    content: '';
    background: linear-gradient(45deg, #ff0000, #ff7300, #fffb00, #48ff00, #00ffd5, #002bff, #7a00ff, #ff00c8, #ff0000);
    position: absolute;
    top: -2px;
    left:-2px;
    background-size: 400%;
    z-index: -1;
    filter: blur(5px);
    width: calc(100% + 4px);
    height: calc(100% + 4px);
    animation: glowing 20s linear infinite;
    opacity: 0;
    transition: opacity .3s ease-in-out;
    border-radius: 10px;
}

.glow-on-hover:active {
    color: #000
}

.glow-on-hover:active:after {
    background: transparent;
}

.glow-on-hover:hover:before {
    opacity: 1;
}

.glow-on-hover:after {
    z-index: -1;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: #111;
    left: 0;
    top: 0;
    border-radius: 10px;
}

@keyframes glowing {
    0% { background-position: 0 0; }
    50% { background-position: 400% 0; }
    100% { background-position: 0 0; }
}


/* animations */
@keyframes flipInY {
	from {
		transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
		animation-timing-function: ease-in;
		opacity: 0;
	}

	40% {
		transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
		animation-timing-function: ease-in;
	}

	60% {
		transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
		opacity: 1;
	}

	80% {
		transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
	}

	to {
		transform: perspective(400px);
	}
}

@keyframes rubberBand {
	from {
		transform: scale3d(1, 1, 1);
	}

	30% {
		transform: scale3d(1.25, 0.75, 1);
	}

	40% {
		transform: scale3d(0.75, 1.25, 1);
	}

	50% {
		transform: scale3d(1.15, 0.85, 1);
	}

	65% {
		transform: scale3d(.95, 1.05, 1);
	}

	75% {
		transform: scale3d(1.05, .95, 1);
	}

	to {
		transform: scale3d(1, 1, 1);
	}
}

@keyframes pulse {
	from {
		transform: scale3d(1, 1, 1);
	}

	50% {
		transform: scale3d(1.2, 1.2, 1.2);
	}

	to {
		transform: scale3d(1, 1, 1);
	}
}


/****** Media queries



/* For Tablets and larger screens
****************/

@media only screen and (min-width: 825px) and (max-width: 1024px)  {
	.container {
		font-size: 22px;
	}

	.deck {
		display: grid;
		grid-template-columns: repeat(6, 1fr);
		grid-template-rows: repeat(3, 1fr);
		grid-gap: 2px;

	}

	.deck .card {
		height: 6.5rem;
		width: 6.5rem;
		;
	}
	.deck .card.match {
		font-size: 22px;
	}
	.deck .card.show {
		font-size: 22px;
	}
}

@media only screen and (min-width: 451px) and (max-width: 824px) {
	.container {
		font-size: 16px;
	}

	.deck {
		display: grid;
		grid-template-columns: repeat(6, 1fr);
		grid-template-rows: repeat(3, 1fr);
		grid-gap: 2px;

	}

	.deck .card {
		height: 4.5rem;
		width: 4.5rem;
		;
	}
	.deck .card.match {
		font-size: 16px;
	}
	.deck .card.show {
		font-size: 16px;
	}
}

@media only screen and (min-width: 451px) and (min-height: 600px) and (max-width: 824px) {
	.container {
		font-size: 16px;
	}

	.deck {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		grid-template-rows: repeat(6, 1fr);
		grid-gap: 2px;

	}

	.deck .card {
		height: 4.5rem;
		width: 4.5rem;
		;
	}
	.deck .card.match {
		font-size: 16px;
	}
	.deck .card.show {
		font-size: 16px;
	}
}


@media only screen and (min-width: 321px) and (max-width: 450px) {
	.container {
		font-size: 15px;
	}

	.deck {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		grid-template-rows: repeat(6, 1fr);
		grid-gap: 2px;


		
	}

	.deck .card {
		height: 4.5rem;
		width: 4.5rem;
		;
	}

	.deck .card.match {
		font-size: 15px;
	}

	.deck .card.show {
		font-size: 15px;
	}
	
}

@media only screen and (max-width: 320px) {
	.container {
		font-size: 14px;
	}
	.deck {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		grid-template-rows: repeat(6, 1fr);
		grid-gap: 2px;

	}
	.deck .card {
		height: 4rem;
		width: 4rem;
		;
	}

	.deck .card.match {
		font-size: 14px;
	}
	.deck .card.show {
		font-size: 14px;
	}
}


